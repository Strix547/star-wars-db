{"version":3,"sources":["components/Header/index.js","components/Header/Header.js","services/SwapiService.js","components/LoadSpinner/index.js","components/LoadSpinner/LoadSpinner.js","components/ErrorIndicator/index.js","components/ErrorIndicator/ErrorIndicator.js","components/RandomPlanet/RandomPlanet.js","components/RandomPlanet/index.js","components/Background/index.js","components/Background/Background.js","components/ErrorBoundry/index.js","components/ErrorBoundry/ErrorBoundry.js","components/SwapiServiceContext/SwapiServiceContext.js","components/ItemInfo/ItemInfo.js","components/ItemInfo/index.js","components/HOC/withData.js","components/HOC/withSwapiService.js","components/HOC/withChildFunction.js","components/HOC/compose.js","components/SwComponents/StarshipInfo.js","components/SwComponents/PlanetInfo.js","components/SwComponents/PersonInfo.js","components/ItemList/index.js","components/ItemList/ItemList.js","components/SwComponents/ItemLists.js","components/pages/PeoplePage.js","components/pages/PlanetsPage.js","components/pages/StarshipsPage.js","components/App/index.js","components/App/App.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","SwapiService","apiURL","imageURL","getResource","_callee","url","res","regenerator_default","wrap","_context","prev","next","fetch","concat","_this","sent","ok","Error","status","json","abrupt","stop","transformPerson","_ref2","name","gender","birth_year","hair_color","eye_color","height","mass","id","slice","birthYear","hairColor","eyeColor","transformPlanet","_ref3","climate","diameter","population","rotation_period","rotationPeriod","transformStarship","_ref4","cost_in_credits","max_atmosphering_speed","crew","passengers","model","starship_class","cost","speed","starshipClass","getPerson","_callee2","person","_context2","getAllPeople","_callee3","people","_context3","results","map","getPlanet","_callee4","planet","_context4","getAllPlanets","_callee5","planets","_context5","getStarship","_callee6","starship","_context6","getAllStarships","_callee7","starships","_context7","getPersonImg","getStarshipImg","getPlanetImg","LoadSpinner","ErrorIndicator","RandomPlanet","swapiService","state","isLoad","hasError","componentDidMount","setInterval","updatePlanet","randomInteger","Math","floor","random","then","onPlanetLoaded","catch","onError","err","setState","_this$state","this","hasData","errorIndicator","components_ErrorIndicator","spinner","components_LoadSpinner","content","RandomPlanet_PlanetView","Component","PlanetView","_ref","Fragment","src","alt","Background","ErrorBoundry","componentDidCatch","props","children","React","createContext","SwapiServiceProvider","Provider","SwapiServiceConsumer","Consumer","Record","item","field","label","ItemInfo","img","updateItem","componentDidUpdate","prevProps","itemId","_this$props","getItemInfo","getImageURL","ItemInfo_ItemInfoView","Object","assign","ItemInfoView","Children","child","cloneElement","withData","View","_Component","_temp","_getPrototypeOf2","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","data","update","getData","inherits","createClass","key","value","withSwapiService","mapMethodsToProps","Wrapped","serviceProps","withChildFunction","fn","compose","funcs","comp","reduceRight","prevResult","components_ItemInfo","ItemInfo_Record","ListItems","onItemSelected","renderItem","items","onClick","PersonList","ItemList","PlanetList","StarshipList","withRouter","history","match","params","push","SwComponents_PersonInfo","SwComponents_PlanetInfo","SwComponents_StarshipInfo","App","components_ErrorBoundry","basename","process","components_Header","components_RandomPlanet","react_router","path","exact","render","component","PeoplePage","PlanetsPage","StarshipsPage","components_Background","ReactDOM","components_App","document","getElementById"],"mappings":"4ZAEeA,ECGA,WACb,OACEC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KAAT,iBAEFL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACZH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,YAAT,WACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,aAAT,YACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,eAAT,uFCfOC,mDACnBC,mCACAC,4DAEAC,kDAAc,SAAAC,EAAOC,GAAP,IAAAC,EAAA,OAAAC,EAAAZ,EAAAa,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACMC,MAAK,GAAAC,OAAIC,EAAKb,QAATY,OAAkBR,IAD7B,WACNC,EADMG,EAAAM,MAGHC,GAHG,CAAAP,EAAAE,KAAA,cAIJ,IAAIM,MAAJ,iBAAAJ,OAA2BR,EAA3B,eAAAQ,OAA4CP,EAAIY,SAJ5C,cAAAT,EAAAE,KAAA,EAOCL,EAAIa,OAPL,cAAAV,EAAAW,OAAA,SAAAX,EAAAM,MAAA,wBAAAN,EAAAY,SAAAjB,iEAUdkB,gBAAkB,SAAAC,GAA0E,IAAxElB,EAAwEkB,EAAxElB,IAAKmB,EAAmED,EAAnEC,KAAMC,EAA6DF,EAA7DE,OAAQC,EAAqDH,EAArDG,WAAYC,EAAyCJ,EAAzCI,WAAYC,EAA6BL,EAA7BK,UAAWC,EAAkBN,EAAlBM,OAAQC,EAAUP,EAAVO,KAChF,MAAO,CACLC,GAAI1B,EAAI2B,MAAM,IAAK,GACnBR,OACAC,SACAQ,UAAWP,EACXQ,UAAWP,EACXQ,SAAUP,EACVC,SACAC,cAIJM,gBAAkB,SAAAC,GAAiE,IAA/DhC,EAA+DgC,EAA/DhC,IAAKmB,EAA0Da,EAA1Db,KAAMc,EAAoDD,EAApDC,QAASC,EAA2CF,EAA3CE,SAAUC,EAAiCH,EAAjCG,WAAYC,EAAqBJ,EAArBI,gBAC5D,MAAO,CACLV,GAAI1B,EAAI2B,MAAM,IAAK,GACnBR,OACAc,UACAC,WACAC,aACAE,eAAgBD,SAIpBE,kBAAoB,SAAAC,GAAmG,IAAjGvC,EAAiGuC,EAAjGvC,IAAKmB,EAA4FoB,EAA5FpB,KAAMqB,EAAsFD,EAAtFC,gBAAiBC,EAAqEF,EAArEE,uBAAwBC,EAA6CH,EAA7CG,KAAMC,EAAuCJ,EAAvCI,WAAYC,EAA2BL,EAA3BK,MAAOC,EAAoBN,EAApBM,eACjG,MAAO,CACLnB,GAAI1B,EAAI2B,MAAM,IAAK,GACnBR,OACA2B,KAAMN,EACNO,MAAON,EACPC,OACAC,aACAC,QACAI,cAAeH,SAInBI,gDAAY,SAAAC,EAAOxB,GAAP,IAAAyB,EAAA,OAAAjD,EAAAZ,EAAAa,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,cAAA8C,EAAA9C,KAAA,EACWG,EAAKX,YAAL,WAAAU,OAA4BkB,IADvC,cACJyB,EADIC,EAAA1C,KAAA0C,EAAArC,OAAA,SAEHN,EAAKQ,gBAAgBkC,IAFlB,wBAAAC,EAAApC,SAAAkC,iEAIZG,kCAAe,SAAAC,IAAA,IAAArD,EAAAsD,EAAA,OAAArD,EAAAZ,EAAAa,KAAA,SAAAqD,GAAA,cAAAA,EAAAnD,KAAAmD,EAAAlD,MAAA,cAAAkD,EAAAlD,KAAA,EACKG,EAAKX,YAAL,YADL,cACPG,EADOuD,EAAA9C,KAEP6C,EAAStD,EAAIwD,QAFND,EAAAzC,OAAA,SAGNwC,EAAOG,IAAIjD,EAAKQ,kBAHV,wBAAAuC,EAAAxC,SAAAsC,WAKfK,gDAAY,SAAAC,EAAOlC,GAAP,IAAAmC,EAAA,OAAA3D,EAAAZ,EAAAa,KAAA,SAAA2D,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAxD,MAAA,cAAAwD,EAAAxD,KAAA,EACWG,EAAKX,YAAL,YAAAU,OAA6BkB,IADxC,cACJmC,EADIC,EAAApD,KAAAoD,EAAA/C,OAAA,SAEHN,EAAKsB,gBAAgB8B,IAFlB,wBAAAC,EAAA9C,SAAA4C,iEAIZG,mCAAgB,SAAAC,IAAA,IAAA/D,EAAAgE,EAAA,OAAA/D,EAAAZ,EAAAa,KAAA,SAAA+D,GAAA,cAAAA,EAAA7D,KAAA6D,EAAA5D,MAAA,cAAA4D,EAAA5D,KAAA,EACIG,EAAKX,YAAL,aADJ,cACRG,EADQiE,EAAAxD,KAERuD,EAAUhE,EAAIwD,QAFNS,EAAAnD,OAAA,SAGPkD,EAAQP,IAAIjD,EAAKsB,kBAHV,wBAAAmC,EAAAlD,SAAAgD,WAKhBG,kDAAc,SAAAC,EAAO1C,GAAP,IAAA2C,EAAA,OAAAnE,EAAAZ,EAAAa,KAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,cAAAgE,EAAAhE,KAAA,EACWG,EAAKX,YAAL,cAAAU,OAA+BkB,IAD1C,cACN2C,EADMC,EAAA5D,KAAA4D,EAAAvD,OAAA,SAELN,EAAK6B,kBAAkB+B,IAFlB,wBAAAC,EAAAtD,SAAAoD,iEAIdG,qCAAkB,SAAAC,IAAA,IAAAvE,EAAAwE,EAAA,OAAAvE,EAAAZ,EAAAa,KAAA,SAAAuE,GAAA,cAAAA,EAAArE,KAAAqE,EAAApE,MAAA,cAAAoE,EAAApE,KAAA,EACEG,EAAKX,YAAL,eADF,cACVG,EADUyE,EAAAhE,KAEV+D,EAAYxE,EAAIwD,QAFNiB,EAAA3D,OAAA,SAGT0D,EAAUf,IAAIjD,EAAK6B,oBAHV,wBAAAoC,EAAA1D,SAAAwD,WAMlBG,aAAe,SAACjD,GACd,SAAAlB,OAAUC,EAAKZ,SAAf,gBAAAW,OAAsCkB,EAAtC,cAEFkD,eAAiB,SAAClD,GAChB,SAAAlB,OAAUC,EAAKZ,SAAf,eAAAW,OAAqCkB,EAArC,cAEFmD,aAAe,SAACnD,GACd,SAAAlB,OAAUC,EAAKZ,SAAf,aAAAW,OAAmCkB,EAAnC,UCpFWoD,SCEK,WAClB,OACEzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,gBCNOwF,SCEQ,WACrB,OACE1F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,SACAH,EAAAC,EAAAC,cAAA,iDACAF,EAAAC,EAAAC,cAAA,yDCFeyF,6MAEnBC,aAAe,IAAItF,IAEnBuF,MAAQ,CACNrB,OAAQ,KACRsB,QAAQ,EACRC,UAAU,KAGZC,kBAAoB,WAClBC,YAAY7E,EAAK8E,aAAc,QAGjCA,aAAe,WACb,IAAMC,EAAgBC,KAAKC,MAAM,EAAoB,GAAhBD,KAAKE,UAC1ClF,EAAKwE,aACFtB,UAAU6B,GACVI,KAAKnF,EAAKoF,gBACVC,MAAMrF,EAAKsF,YAGhBA,QAAU,SAACC,GACTvF,EAAKwF,SAAS,CACZb,UAAU,EACVD,QAAQ,OAIZU,eAAiB,SAAChC,GAChBpD,EAAKwF,SAAS,CACZpC,SACAsB,QAAQ,6EAIH,IAAAe,EAC8BC,KAAKjB,MAAlCC,EADDe,EACCf,OAAQC,EADTc,EACSd,SAAUvB,EADnBqC,EACmBrC,OAEpBuC,KAAajB,GAAUC,GAEvBiB,EAAiBjB,EAAW/F,EAAAC,EAAAC,cAAC+G,EAAD,MAAqB,KACjDC,EAAUpB,EAAS,KAAO9F,EAAAC,EAAAC,cAACiH,EAAD,MAC1BC,EAAUL,EAAU/G,EAAAC,EAAAC,cAACmH,EAAD,CAAY7C,OAAQA,IAAa,KAE3D,OACExE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACZ6G,EACAE,EACAE,UAjDiCE,aAuDpCC,EAAa,SAAAC,GAAgB,IAAbhD,EAAagD,EAAbhD,OAEZnC,EAA4DmC,EAA5DnC,GAAIP,EAAwD0C,EAAxD1C,KAAMc,EAAkD4B,EAAlD5B,QAASC,EAAyC2B,EAAzC3B,SAAUC,EAA+B0B,EAA/B1B,WAAYE,EAAmBwB,EAAnBxB,eAEjD,OACEhD,EAAAC,EAAAC,cAACF,EAAAC,EAAMwH,SAAP,KACEzH,EAAAC,EAAAC,cAAA,OAAKwH,IAAG,uDAAAvG,OAAyDkB,EAAzD,QAAmEsF,IAAG,UAAAxG,OAAYW,KAE1F9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,UAAK4B,GACL9B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,YAAO0C,IAET5C,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,YAAO2C,IAET7C,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,YAAO4C,IAET9C,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,YAAO8C,QCrFJ2C,ICAAiC,SCEI,WACjB,OACE5H,EAAAC,EAAAC,cAAA,OAAKmC,GAAG,cACNrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBCNN0H,6MCIbhC,MAAQ,CACNE,UAAU,KAGZ+B,kBAAoB,WAClB1G,EAAKwF,SAAS,CACZb,UAAU,6EAKZ,OAAIe,KAAKjB,MAAME,SACN/F,EAAAC,EAAAC,cAAC+G,EAAD,MAGFH,KAAKiB,MAAMC,gBAjBoBV,eCCtCW,IAAMC,gBAFEC,IAAVC,SACUC,IAAVC,iBCEIC,SAAS,SAAAf,GAA4B,IAAzBgB,EAAyBhB,EAAzBgB,KAAMC,EAAmBjB,EAAnBiB,MAAOC,EAAYlB,EAAZkB,MAC7B,OACE1I,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,YAAOwI,GADT,IAEE1I,EAAAC,EAAAC,cAAA,gBAAQsI,EAAKC,OASEE,6MAEnB/C,aAAe,IAAItF,IAEnBuF,MAAQ,CACN2C,KAAM,KACNI,IAAK,KACL9C,QAAQ,KAGVE,kBAAoB,WAClB5E,EAAKyH,gBAGPC,mBAAqB,SAACC,GAChB3H,EAAK2G,MAAMiB,SAAWD,EAAUC,SAClC5H,EAAKyH,aACLzH,EAAKwF,SAAS,CACZd,QAAQ,QAKd+C,WAAa,WAAM,IAAAI,EAC4B7H,EAAK2G,MAA1CiB,EADSC,EACTD,OAAQE,EADCD,EACDC,YAAaC,EADZF,EACYE,YAExBH,GAELE,EAAYF,GACTzC,KAAK,SAAAiC,GACJpH,EAAKwF,SAAS,CACZ4B,OACAI,IAAKO,EAAYH,GACjBlD,QAAQ,+EAOd,IAAKgB,KAAKjB,MAAM2C,KAAM,OAAO,KAFtB,IAAA3B,EAIuBC,KAAKjB,MAA3B2C,EAJD3B,EAIC2B,KAAMI,EAJP/B,EAIO+B,IAAK9C,EAJZe,EAIYf,OACboB,EAAUpB,EAAS,KAAO9F,EAAAC,EAAAC,cAACiH,EAAD,MAC1BC,EAAUtB,EAAS9F,EAAAC,EAAAC,cAACkJ,EAADC,OAAAC,OAAA,CAAcd,KAAMA,EAAMI,IAAKA,GAAS9B,KAAKiB,QAAY,KAClF,OACE/H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZ+G,EACAE,UAhD6BE,aAsDhCiC,EAAe,SAAA1H,GAA6B,IAA1B2G,EAA0B3G,EAA1B2G,KAAMR,EAAoBnG,EAApBmG,SAAUY,EAAU/G,EAAV+G,IAC9B9G,EAAS0G,EAAT1G,KACR,OACE9B,EAAAC,EAAAC,cAACF,EAAAC,EAAMwH,SAAP,KACEzH,EAAAC,EAAAC,cAAA,OAAKwH,IAAKkB,EAAKjB,IAAK7F,IACpB9B,EAAAC,EAAAC,cAAA,UAEI+H,IAAMuB,SAASnF,IAAI2D,EAAU,SAACyB,GAC5B,OAAOxB,IAAMyB,aAAaD,EAAO,CAAEjB,cC3EhCG,IC4CAgB,EA7CE,SAAAC,GACf,gBAAAC,GAAA,SAAAC,IAAA,IAAAC,EAAA3I,EAAAiI,OAAAW,EAAA,EAAAX,CAAAvC,KAAAgD,GAAA,QAAAG,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAlJ,EAAAiI,OAAAkB,EAAA,EAAAlB,CAAAvC,MAAAiD,EAAAV,OAAAmB,EAAA,EAAAnB,CAAAS,IAAAW,KAAAC,MAAAX,EAAA,CAAAjD,MAAA3F,OAAAiJ,MAEEvE,MAAQ,CACN8E,KAAM,KACN7E,QAAQ,EACRC,UAAU,GALd3E,EAQE4E,kBAAoB,WAClB5E,EAAKwJ,UATTxJ,EAYEwJ,OAAS,WACPxJ,EAAKwF,SAAS,CACZd,QAAQ,EACRC,UAAU,IAGZ3E,EAAK2G,MAAM8C,UACRtE,KAAK,SAACoE,GACLvJ,EAAKwF,SAAS,CACZ+D,OACA7E,QAAQ,MAGXW,MAAM,WACLrF,EAAKwF,SAAS,CACZb,UAAU,EACVD,QAAQ,OA5BlB1E,EAAA,OAAAiI,OAAAyB,EAAA,EAAAzB,CAAAS,EAAAD,GAAAR,OAAA0B,EAAA,EAAA1B,CAAAS,EAAA,EAAAkB,IAAA,SAAAC,MAAA,WAiCW,IAAApE,EAC4BC,KAAKjB,MAAhC8E,EADD9D,EACC8D,KAAM7E,EADPe,EACOf,OAAQC,EADfc,EACed,SAEtB,OAAKD,EACDC,EAAiB/F,EAAAC,EAAAC,cAAC+G,EAAD,MAEdjH,EAAAC,EAAAC,cAAC0J,EAADP,OAAAC,OAAA,GAAUxC,KAAKiB,MAAf,CAAsB4C,KAAMA,KAHf3K,EAAAC,EAAAC,cAACiH,EAAD,UApCxB2C,EAAA,CAAqBxC,cCgBR4D,EAlBU,SAAAC,GAAiB,OAAI,SAAAC,GAC5C,OAAO,SAACrD,GACN,OACE/H,EAAAC,EAAAC,cAACmI,EAAD,KAEI,SAACzC,GACC,IAAMyF,EAAeF,EAAkBvF,GAEvC,OACE5F,EAAAC,EAAAC,cAACkL,EAAD/B,OAAAC,OAAA,GAAavB,EAAWsD,SCDvBC,EAVW,SAAAC,GAAE,OAAI,SAAAH,GAC9B,OAAO,SAACrD,GACN,OACE/H,EAAAC,EAAAC,cAACkL,EAAYrD,EACVwD,MCAMC,EANC,mBAAAvB,EAAAC,UAAAC,OAAIsB,EAAJ,IAAApB,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAImB,EAAJnB,GAAAJ,UAAAI,GAAA,OAAc,SAACoB,GAC7B,OAAOD,EAAME,YACX,SAACC,EAAYL,GAAb,OAAoBA,EAAGK,IAAaF,KCuBzBR,IAPW,SAACtF,GACzB,MAAO,CACLsD,YAAatD,EAAad,YAC1BqE,YAAavD,EAAaL,iBAIf2F,CApBM,SAACnD,GACpB,OACE/H,EAAAC,EAAAC,cAAC2L,EAAa9D,EACZ/H,EAAAC,EAAAC,cAAC4L,EAAD,CAAQrD,MAAM,OAAOC,MAAM,SAC3B1I,EAAAC,EAAAC,cAAC4L,EAAD,CAAQrD,MAAM,gBAAgBC,MAAM,UACpC1I,EAAAC,EAAAC,cAAC4L,EAAD,CAAQrD,MAAM,QAAQC,MAAM,UAC5B1I,EAAAC,EAAAC,cAAC4L,EAAD,CAAQrD,MAAM,OAAOC,MAAM,SAC3B1I,EAAAC,EAAAC,cAAC4L,EAAD,CAAQrD,MAAM,OAAOC,MAAM,SAC3B1I,EAAAC,EAAAC,cAAC4L,EAAD,CAAQrD,MAAM,aAAaC,MAAM,kBCWxBwC,IAPW,SAACtF,GACzB,MAAO,CACLsD,YAAatD,EAAatB,UAC1B6E,YAAavD,EAAaJ,eAIf0F,CAnBI,SAACnD,GAClB,OACE/H,EAAAC,EAAAC,cAAC2L,EAAa9D,EACZ/H,EAAAC,EAAAC,cAAC4L,EAAD,CAAQrD,MAAM,OAAOC,MAAM,SAC3B1I,EAAAC,EAAAC,cAAC4L,EAAD,CAAQrD,MAAM,aAAaC,MAAM,eACjC1I,EAAAC,EAAAC,cAAC4L,EAAD,CAAQrD,MAAM,UAAUC,MAAM,YAC9B1I,EAAAC,EAAAC,cAAC4L,EAAD,CAAQrD,MAAM,WAAWC,MAAM,aAC/B1I,EAAAC,EAAAC,cAAC4L,EAAD,CAAQrD,MAAM,iBAAiBC,MAAM,uBCc5BwC,IAPW,SAACtF,GACzB,MAAO,CACLsD,YAAatD,EAAahC,UAC1BuF,YAAavD,EAAaN,eAIf4F,CArBI,SAACnD,GAClB,OACE/H,EAAAC,EAAAC,cAAC2L,EAAa9D,EACZ/H,EAAAC,EAAAC,cAAC4L,EAAD,CAAQrD,MAAM,OAAOC,MAAM,SAC3B1I,EAAAC,EAAAC,cAAC4L,EAAD,CAAQrD,MAAM,SAASC,MAAM,WAC7B1I,EAAAC,EAAAC,cAAC4L,EAAD,CAAQrD,MAAM,YAAYC,MAAM,eAChC1I,EAAAC,EAAAC,cAAC4L,EAAD,CAAQrD,MAAM,YAAYC,MAAM,eAChC1I,EAAAC,EAAAC,cAAC4L,EAAD,CAAQrD,MAAM,WAAWC,MAAM,cAC/B1I,EAAAC,EAAAC,cAAC4L,EAAD,CAAQrD,MAAM,SAASC,MAAM,WAC7B1I,EAAAC,EAAAC,cAAC4L,EAAD,CAAQrD,MAAM,OAAOC,MAAM,YCZlBqD,SCEE,SAAAvE,GAAoD,IAAjDmD,EAAiDnD,EAAjDmD,KAAMqB,EAA2CxE,EAA3CwE,eAA0BC,EAAiBzE,EAA3BQ,SAElCkE,EAAQvB,EAAKtG,IAAI,SAAAmE,GAAQ,IACrBnG,EAAOmG,EAAPnG,GACFqG,EAAQuD,EAAWzD,GAEzB,OACExI,EAAAC,EAAAC,cAAA,MAAI8K,IAAK3I,EAAI8J,QAAS,kBAAMH,EAAe3J,KACxCqG,KAKP,OACE1I,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACX+L,KCQDE,EAAaZ,EACCN,EAvBY,SAACtF,GAC/B,MAAO,CACLiF,QAASjF,EAAa5B,gBAsBN2F,EACA2B,EAPQ,SAAA9D,GAAA,IAAE1F,EAAF0F,EAAE1F,KAAMC,EAARyF,EAAQzF,OAAR,OAAoB/B,EAAAC,EAAAC,cAAA,YAAO4B,EAAP,KAAeC,EAAf,OAI7ByJ,CAICa,GAEdC,EAAad,EACCN,EAvBY,SAACtF,GAC/B,MAAO,CACLiF,QAASjF,EAAalB,iBAsBNiF,EACA2B,EAZS,SAAAzJ,GAAA,IAAEC,EAAFD,EAAEC,KAAMc,EAARf,EAAQe,QAAR,OAAqB5C,EAAAC,EAAAC,cAAA,YAAO4B,EAAP,KAAec,EAAf,OAS/B4I,CAICa,GAEdE,EAAef,EACCN,EAvBa,SAACtF,GAClC,MAAO,CACLiF,QAASjF,EAAaV,mBAsBJyE,EACA2B,EAjBK,SAAA3I,GAAA,IAAEb,EAAFa,EAAEb,KAAM6B,EAARhB,EAAQgB,cAAR,OAA2B3D,EAAAC,EAAAC,cAACF,EAAAC,EAAMwH,SAAP,KAAgBzH,EAAAC,EAAAC,cAAA,SAAI4B,GAApB,IAA8B9B,EAAAC,EAAAC,cAAA,aAAKyD,EAAL,QAc/D6H,CAICa,GCrBPG,cAbI,SAAAhF,GAAwB,IAArBiF,EAAqBjF,EAArBiF,QAEZpK,EAFiCmF,EAAZkF,MAERC,OAAbtK,GAER,OACErC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACkM,EAAD,CAAYJ,eAAgB,SAAC3J,GAAD,OAAQoK,EAAQG,KAAKvK,MACjDrC,EAAAC,EAAAC,cAAC2M,EAAD,CAAY7D,OAAQ3G,OCKXmK,cAZK,SAAAhF,GAAuB,IAApBiF,EAAoBjF,EAApBiF,QAEbpK,EAFiCmF,EAAXkF,MAETC,OAAbtK,GAER,OACErC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACoM,EAAD,CAAYN,eAAgB,SAAC3J,GAAD,OAAQoK,EAAQG,KAAKvK,MACjDrC,EAAAC,EAAAC,cAAC4M,EAAD,CAAY9D,OAAQ3G,OCKXmK,cAZO,SAAAhF,GAAsB,IAApBkF,EAAoBlF,EAApBkF,MAAOD,EAAajF,EAAbiF,QAErBpK,EAAOqK,EAAMC,OAAbtK,GAER,OACErC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACqM,EAAD,CAAcP,eAAgB,SAAC3J,GAAD,OAAQoK,EAAQG,KAAKvK,MACnDrC,EAAAC,EAAAC,cAAC6M,EAAD,CAAc/D,OAAQ3G,OCdb2K,ECqBH,WACV,IAAMpH,EAAe,IAAItF,EAEzB,OACEN,EAAAC,EAAAC,cAAC+M,EAAD,KACEjN,EAAAC,EAAAC,cAACiI,EAAD,CAAsB8C,MAAOrF,GAC3B5F,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQ8M,SAAUC,kBAChBnN,EAAAC,EAAAC,cAAA,OAAKmC,GAAG,OACNrC,EAAAC,EAAAC,cAACkN,EAAD,MACApN,EAAAC,EAAAC,cAACmN,EAAD,MAEArN,EAAAC,EAAAC,cAACoN,EAAA,EAAD,KACEtN,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,OAAQ,kBAAMzN,EAAAC,EAAAC,cAAA,wCACpCF,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAOC,KAAK,eAAeC,OAAK,EAACE,UAAWC,IAC5C3N,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAOC,KAAK,gBAAgBC,OAAK,EAACE,UAAWE,IAC7C5N,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAOC,KAAK,kBAAkBC,OAAK,EAACE,UAAWG,IAC/C7N,EAAAC,EAAAC,cAACoN,EAAA,EAAD,CAAOG,OAAQ,kBAAMzN,EAAAC,EAAAC,cAAA,mCAGvBF,EAAAC,EAAAC,cAAC4N,EAAD,WCrCZC,IAASN,OACLzN,EAAAC,EAAAC,cAAC8N,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.22517c39.chunk.js","sourcesContent":["import Header from './Header'\r\n\r\nexport default Header","import React from 'react'\r\nimport './Header.scss'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <div className=\"logo\">\r\n        <Link to=\"/\">Star Wars DB</Link>\r\n      </div>\r\n      <nav>\r\n        <ul className=\"menu\">\r\n          <li><Link to=\"/people/\">People</Link></li>\r\n          <li><Link to=\"/planets/\">Planets</Link></li>\r\n          <li><Link to=\"/starships/\">Starships</Link></li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","export default class SwapiService {\r\n  apiURL = `https://swapi.co/api`;\r\n  imageURL = `https://starwars-visualguide.com/assets/img`;\r\n\r\n  getResource = async (url) => {\r\n    const res = await fetch(`${this.apiURL}${url}`);\r\n\r\n    if (!res.ok) {\r\n      throw new Error(`Could't fetch ${url}, received ${res.status}`)\r\n    }\r\n\r\n    return await res.json();\r\n  }\r\n\r\n  transformPerson = ({url, name, gender, birth_year, hair_color, eye_color, height, mass}) => {\r\n    return {\r\n      id: url.slice(28, -1),\r\n      name,\r\n      gender,\r\n      birthYear: birth_year,\r\n      hairColor: hair_color,\r\n      eyeColor: eye_color,\r\n      height,\r\n      mass\r\n    }\r\n  }\r\n\r\n  transformPlanet = ({url, name, climate, diameter, population, rotation_period}) => {\r\n    return {\r\n      id: url.slice(29, -1),\r\n      name,\r\n      climate,\r\n      diameter,\r\n      population,\r\n      rotationPeriod: rotation_period\r\n    }\r\n  }\r\n\r\n  transformStarship = ({url, name, cost_in_credits, max_atmosphering_speed, crew, passengers, model, starship_class}) => {\r\n    return {\r\n      id: url.slice(31, -1),\r\n      name,\r\n      cost: cost_in_credits,\r\n      speed: max_atmosphering_speed,\r\n      crew,\r\n      passengers,\r\n      model,\r\n      starshipClass: starship_class\r\n    }\r\n  }\r\n\r\n  getPerson = async (id) => {\r\n    const person = await this.getResource(`/people/${id}`);\r\n    return this.transformPerson(person);\r\n  }\r\n  getAllPeople = async () => {\r\n    const res = await this.getResource(`/people/`);\r\n    const people = res.results;\r\n    return people.map(this.transformPerson);\r\n  }\r\n  getPlanet = async (id) => {\r\n    const planet = await this.getResource(`/planets/${id}`);\r\n    return this.transformPlanet(planet);\r\n  }\r\n  getAllPlanets = async () => {\r\n    const res = await this.getResource(`/planets/`);\r\n    const planets = res.results;\r\n    return planets.map(this.transformPlanet);\r\n  }\r\n  getStarship = async (id) => {\r\n    const starship = await this.getResource(`/starships/${id}`);\r\n    return this.transformStarship(starship);\r\n  }\r\n  getAllStarships = async () => {\r\n    const res = await this.getResource(`/starships/`);\r\n    const starships = res.results;\r\n    return starships.map(this.transformStarship);\r\n  }\r\n\r\n  getPersonImg = (id) => {\r\n    return `${this.imageURL}/characters/${id}.jpg`;\r\n  }\r\n  getStarshipImg = (id) => {\r\n    return `${this.imageURL}/starships/${id}.jpg`;\r\n  }\r\n  getPlanetImg = (id) => {\r\n    return `${this.imageURL}/planets/${id}.jpg`;\r\n  }\r\n}","import LoadSpinner from './LoadSpinner'\r\n\r\nexport default LoadSpinner","import React from 'react'\r\n\r\nimport './LoadSpinner.scss'\r\n\r\nconst LoadSpinner = () => {\r\n  return (\r\n    <div className=\"lds-css ng-scope\">\r\n      <div className=\"lds-rolling\">\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoadSpinner\r\n","import ErrorIndicator from './ErrorIndicator'\r\n\r\nexport default ErrorIndicator","import React from 'react'\r\n\r\nimport './ErrorIndicator.scss'\r\n\r\nconst ErrorIndicator = () => {\r\n  return (\r\n    <div className=\"error-indicator\">\r\n      <span className=\"boom\">BOOM!</span>\r\n      <span>something has gone terribly wrong</span>\r\n      <span>(but we already sent droids to fix it)</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorIndicator\r\n","import React, { Component } from 'react'\r\n\r\nimport './RandomPlanet.scss'\r\nimport SwapiService from '../../services/SwapiService'\r\nimport LoadSpinner from '../LoadSpinner'\r\nimport ErrorIndicator from '../ErrorIndicator'\r\n\r\nexport default class RandomPlanet extends Component {\r\n\r\n  swapiService = new SwapiService();\r\n\r\n  state = {\r\n    planet: null,\r\n    isLoad: false,\r\n    hasError: false\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    setInterval(this.updatePlanet, 3000);\r\n  }\r\n\r\n  updatePlanet = () => {\r\n    const randomInteger = Math.floor(2 + Math.random() * 15);\r\n    this.swapiService\r\n      .getPlanet(randomInteger)\r\n      .then(this.onPlanetLoaded)\r\n      .catch(this.onError);\r\n  }\r\n\r\n  onError = (err) => {\r\n    this.setState({\r\n      hasError: true,\r\n      isLoad: true\r\n    });\r\n  }\r\n\r\n  onPlanetLoaded = (planet) => {\r\n    this.setState({\r\n      planet,\r\n      isLoad: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { isLoad, hasError, planet } = this.state;\r\n\r\n    const hasData = !(!isLoad || hasError);\r\n\r\n    const errorIndicator = hasError ? <ErrorIndicator /> : null;\r\n    const spinner = isLoad ? null : <LoadSpinner />;\r\n    const content = hasData ? <PlanetView planet={planet} /> : null;\r\n\r\n    return (\r\n      <div className=\"random-planet\">\r\n        {errorIndicator}\r\n        {spinner}\r\n        {content}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst PlanetView = ({ planet }) => {\r\n  \r\n  const { id, name, climate, diameter, population, rotationPeriod } = planet\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <img src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} alt={`planet ${name}`} />\r\n\r\n      <div className=\"desc\">\r\n        <h3>{name}</h3>\r\n        <ul>\r\n          <li>\r\n            <span>Climate: </span>\r\n            <span>{climate}</span>\r\n          </li>\r\n          <li>\r\n            <span>Diameter: </span>\r\n            <span>{diameter}</span>\r\n          </li>\r\n          <li>\r\n            <span>Population: </span>\r\n            <span>{population}</span>\r\n          </li>\r\n          <li>\r\n            <span>Rotation period: </span>\r\n            <span>{rotationPeriod}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import RandomPlanet from './RandomPlanet'\r\n\r\nexport default RandomPlanet","import Background from './Background'\r\n\r\nexport default Background","import React from 'react'\r\n\r\nimport './Background.scss'\r\n\r\nconst Background = () => {\r\n  return (\r\n    <div id=\"background\">\r\n      <div className=\"stars\"></div>\r\n      <div className=\"twinkling\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Background\r\n","import ErrorBoundry from './ErrorBoundry'\r\n\r\nexport default ErrorBoundry","import React, { Component } from 'react'\r\n\r\nimport ErrorIndicator from '../ErrorIndicator'\r\n\r\nexport default class ErrorBoundry extends Component {\r\n\r\n  state = {\r\n    hasError: false\r\n  };\r\n\r\n  componentDidCatch = () => {\r\n    this.setState({\r\n      hasError: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nconst { \r\n  Provider: SwapiServiceProvider,\r\n  Consumer: SwapiServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n  SwapiServiceProvider,\r\n  SwapiServiceConsumer\r\n}","import React, { Component } from 'react'\r\n\r\nimport './ItemInfo.scss'\r\nimport SwapiService from '../../services/SwapiService'\r\nimport LoadSpinner from '../LoadSpinner';\r\n\r\nconst Record = ({ item, field, label }) => {\r\n  return (\r\n    <li>\r\n      <span>{label}</span>:\r\n      <span> {item[field]}</span>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport {\r\n  Record\r\n};\r\n\r\nexport default class ItemInfo extends Component {\r\n\r\n  swapiService = new SwapiService();\r\n\r\n  state = {\r\n    item: null,\r\n    img: null,\r\n    isLoad: false\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.updateItem();\r\n  }\r\n\r\n  componentDidUpdate = (prevProps) => {\r\n    if (this.props.itemId !== prevProps.itemId) {\r\n      this.updateItem();\r\n      this.setState({\r\n        isLoad: false\r\n      });\r\n    }\r\n  }\r\n\r\n  updateItem = () => {\r\n    const { itemId, getItemInfo, getImageURL } = this.props\r\n    \r\n    if (!itemId) return;\r\n\r\n    getItemInfo(itemId)\r\n      .then(item => {\r\n        this.setState({\r\n          item,\r\n          img: getImageURL(itemId),\r\n          isLoad: true\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    if (!this.state.item) return null;\r\n\r\n    const { item, img, isLoad } = this.state\r\n    const spinner = isLoad ? null : <LoadSpinner />;\r\n    const content = isLoad ? <ItemInfoView item={item} img={img} {...this.props} /> : null;\r\n    return (\r\n      <div className=\"item-info\">\r\n        {spinner}\r\n        {content}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst ItemInfoView = ({ item, children, img }) => {\r\n  const { name } = item\r\n  return (\r\n    <React.Fragment>\r\n      <img src={img} alt={name} />\r\n      <ul>\r\n        {\r\n          React.Children.map(children, (child) => {\r\n            return React.cloneElement(child, { item });\r\n          })\r\n        }\r\n      </ul>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import ItemInfo from './ItemInfo'\r\nimport { Record } from './ItemInfo'\r\n\r\nexport {\r\n  Record\r\n}\r\nexport default ItemInfo","import React, { Component } from 'react'\r\n\r\nimport LoadSpinner from '../LoadSpinner'\r\nimport ErrorIndicator from '../ErrorIndicator'\r\n\r\nconst withData = View => {\r\n  return class extends Component {\r\n\r\n    state = {\r\n      data: null,\r\n      isLoad: false,\r\n      hasError: false\r\n    }\r\n\r\n    componentDidMount = () => {\r\n      this.update();\r\n    }\r\n\r\n    update = () => {\r\n      this.setState({\r\n        isLoad: false,\r\n        hasError: false\r\n      });\r\n\r\n      this.props.getData()\r\n        .then((data) => {\r\n          this.setState({\r\n            data,\r\n            isLoad: true\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            hasError: true,\r\n            isLoad: true\r\n          });\r\n        });\r\n    }\r\n\r\n    render() {\r\n      const { data, isLoad, hasError } = this.state\r\n\r\n      if (!isLoad) return <LoadSpinner />;\r\n      if (hasError) return <ErrorIndicator />;\r\n\r\n      return <View {...this.props} data={data} />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withData","import React from 'react'\r\n\r\nimport { SwapiServiceConsumer } from '../SwapiServiceContext'\r\n\r\nconst withSwapiService = mapMethodsToProps => Wrapped => {\r\n  return (props) => {\r\n    return (\r\n      <SwapiServiceConsumer>\r\n        {\r\n          (swapiService) => {\r\n            const serviceProps = mapMethodsToProps(swapiService);\r\n\r\n            return (\r\n              <Wrapped {...props} {...serviceProps} />\r\n            );\r\n          }\r\n        }\r\n      </SwapiServiceConsumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSwapiService","import React from 'react'\r\n\r\nconst withChildFunction = fn => Wrapped => {\r\n  return (props) => {\r\n    return (\r\n      <Wrapped {...props}>\r\n        {fn}\r\n      </Wrapped>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withChildFunction","const compose = (...funcs) => (comp) => {\r\n  return funcs.reduceRight(\r\n    (prevResult, fn) => fn(prevResult), comp\r\n  );\r\n};\r\n\r\nexport default compose","import React from 'react'\r\n\r\nimport ItemInfo, { Record } from '../ItemInfo'\r\nimport { withSwapiService } from '../HOC';\r\n\r\nconst StarshipInfo = (props) => {\r\n  return (\r\n    <ItemInfo {...props}>\r\n      <Record field=\"name\" label=\"Name\" />\r\n      <Record field=\"starshipClass\" label=\"Class\" />\r\n      <Record field=\"speed\" label=\"Speed\" />\r\n      <Record field=\"cost\" label=\"Cost\" />\r\n      <Record field=\"crew\" label=\"Crew\" />\r\n      <Record field=\"passengers\" label=\"Passengers\" />\r\n    </ItemInfo>\r\n  );\r\n}\r\n\r\nconst mapMethodsToProps = (swapiService) => {\r\n  return {\r\n    getItemInfo: swapiService.getStarship,\r\n    getImageURL: swapiService.getStarshipImg\r\n  }\r\n}\r\n\r\nexport default withSwapiService(mapMethodsToProps)(StarshipInfo)","import React from 'react'\r\n\r\nimport ItemInfo, { Record } from '../ItemInfo'\r\nimport { withSwapiService } from '../HOC';\r\n\r\nconst PlanetInfo = (props) => {\r\n  return (\r\n    <ItemInfo {...props}>\r\n      <Record field=\"name\" label=\"Name\" />\r\n      <Record field=\"population\" label=\"Population\" />\r\n      <Record field=\"climate\" label=\"Climate\" />\r\n      <Record field=\"diameter\" label=\"Diameter\" />\r\n      <Record field=\"rotationPeriod\" label=\"Rotation period\" />\r\n    </ItemInfo>\r\n  );\r\n}\r\n\r\nconst mapMethodsToProps = (swapiService) => {\r\n  return {\r\n    getItemInfo: swapiService.getPlanet,\r\n    getImageURL: swapiService.getPlanetImg\r\n  }\r\n}\r\n\r\nexport default withSwapiService(mapMethodsToProps)(PlanetInfo)","import React from 'react'\r\n\r\nimport ItemInfo, { Record } from '../ItemInfo'\r\nimport { withSwapiService } from '../HOC'\r\n\r\nconst PersonInfo = (props) => {\r\n  return (\r\n    <ItemInfo {...props}>\r\n      <Record field=\"name\" label=\"Name\" />\r\n      <Record field=\"gender\" label=\"Gender\" />\r\n      <Record field=\"birthYear\" label=\"Birth year\" />\r\n      <Record field=\"hairColor\" label=\"Hair color\" />\r\n      <Record field=\"eyeColor\" label=\"Eye color\" />\r\n      <Record field=\"height\" label=\"Height\" />\r\n      <Record field=\"mass\" label=\"Mass\" />\r\n    </ItemInfo>\r\n  );\r\n}\r\n\r\nconst mapMethodsToProps = (swapiService) => {\r\n  return {\r\n    getItemInfo: swapiService.getPerson,\r\n    getImageURL: swapiService.getPersonImg\r\n  }\r\n}\r\n\r\nexport default withSwapiService(mapMethodsToProps)(PersonInfo)","import ListItems from './ItemList'\r\n\r\nexport default ListItems","import React from 'react'\r\n\r\nimport './ItemList.scss'\r\n\r\nconst ItemList = ({ data, onItemSelected, children: renderItem }) => {\r\n\r\n  const items = data.map(item => {\r\n    const { id } = item\r\n    const label = renderItem(item);\r\n\r\n    return (\r\n      <li key={id} onClick={() => onItemSelected(id)}>\r\n        {label}\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <ul className=\"item-list\">\r\n      {items}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default ItemList","import React from 'react'\r\n\r\nimport ItemList from '../ItemList'\r\nimport { withData, withChildFunction, withSwapiService, compose } from '../HOC'\r\n\r\nconst mapPersonMethodsToProps = (swapiService) => {\r\n  return {\r\n    getData: swapiService.getAllPeople\r\n  }\r\n}\r\n\r\nconst mapPlanetMethodsToProps = (swapiService) => {\r\n  return {\r\n    getData: swapiService.getAllPlanets\r\n  }\r\n}\r\n\r\nconst mapStarshipsMethodsToProps = (swapiService) => {\r\n  return {\r\n    getData: swapiService.getAllStarships\r\n  }\r\n}\r\n\r\nconst renderGenderAndName = ({name, gender}) => <span>{name} ({gender})</span>;\r\nconst renderClimateAndName = ({name, climate}) => <span>{name} ({climate})</span>;\r\nconst renderClassAndName = ({name, starshipClass}) => <React.Fragment><p>{name}</p> <p>({starshipClass})</p></React.Fragment>;\r\n\r\nconst PersonList = compose(\r\n                    withSwapiService(mapPersonMethodsToProps),\r\n                    withData,\r\n                    withChildFunction(renderGenderAndName)\r\n                  )(ItemList);\r\n\r\nconst PlanetList = compose(\r\n                    withSwapiService(mapPlanetMethodsToProps),\r\n                    withData,\r\n                    withChildFunction(renderClimateAndName)\r\n                  )(ItemList);\r\n\r\nconst StarshipList = compose(\r\n                      withSwapiService(mapStarshipsMethodsToProps),\r\n                      withData,\r\n                      withChildFunction(renderClassAndName)\r\n                    )(ItemList);\r\n\r\nexport {\r\n  PersonList,\r\n  PlanetList,\r\n  StarshipList\r\n}\r\n","import React from 'react'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport {\r\n  PersonList,\r\n  PersonInfo\r\n} from '../SwComponents'\r\n\r\nconst PeoplePage = ({ history, match }) => {\r\n\r\n  const { id } = match.params;\r\n\r\n  return (\r\n    <div className=\"item-block\">\r\n      <PersonList onItemSelected={(id) => history.push(id)} />\r\n      <PersonInfo itemId={id} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default withRouter(PeoplePage)","import React from 'react'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport {\r\n  PlanetList,\r\n  PlanetInfo\r\n} from '../SwComponents'\r\n\r\nconst PlanetsPage = ({ history, match}) => {\r\n\r\n  const { id } = match.params;\r\n\r\n  return (\r\n    <div className=\"item-block\">\r\n      <PlanetList onItemSelected={(id) => history.push(id)} />\r\n      <PlanetInfo itemId={id} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(PlanetsPage)","import React from 'react'\r\n\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport {\r\n  StarshipList,\r\n  StarshipInfo\r\n} from '../SwComponents'\r\n\r\nconst StarshipsPage = ({match, history}) => {\r\n\r\n  const { id } = match.params;\r\n\r\n  return (\r\n    <div className=\"item-block\">\r\n      <StarshipList onItemSelected={(id) => history.push(id)} />\r\n      <StarshipInfo itemId={id} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(StarshipsPage)","import App from './App'\r\n\r\nexport default App","import React from 'react'\r\n\r\nimport '../../fonts/roboto.css'\r\nimport '../../scss/screen.scss'\r\nimport './App.scss'\r\n\r\nimport Header from '../Header'\r\nimport RandomPlanet from '../RandomPlanet'\r\nimport Background from '../Background'\r\nimport ErrorBoundry from '../ErrorBoundry'\r\n\r\nimport SwapiService from '../../services/SwapiService'\r\nimport { SwapiServiceProvider } from '../SwapiServiceContext'\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\n\r\nimport {\r\n  PeoplePage,\r\n  PlanetsPage,\r\n  StarshipsPage\r\n} from '../pages'\r\n\r\n\r\nconst App = () => {\r\n  const swapiService = new SwapiService();\r\n  \r\n  return (\r\n    <ErrorBoundry>\r\n      <SwapiServiceProvider value={swapiService}>\r\n        <Router basename={process.env.PUBLIC_URL + '/'}>\r\n          <div id=\"app\">\r\n            <Header />\r\n            <RandomPlanet />\r\n            \r\n            <Switch>\r\n              <Route path=\"/\" exact render={() => <h2>Welcome to Star Wars DB</h2>} />\r\n              <Route path=\"/people/:id?\" exact component={PeoplePage} />\r\n              <Route path=\"/planets/:id?\" exact component={PlanetsPage} />\r\n              <Route path=\"/starships/:id?\" exact component={StarshipsPage} />\r\n              <Route render={() => <h2>Page is not found</h2>} />\r\n            </Switch>\r\n            \r\n            <Background />\r\n          </div>\r\n        </Router>\r\n      </SwapiServiceProvider>\r\n    </ErrorBoundry>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from '../src/components/App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}